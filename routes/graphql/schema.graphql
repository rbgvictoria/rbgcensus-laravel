#import ../../app/Http/GraphQL/Types/Accession.graphql
#import ../../app/Http/GraphQL/Types/Area.graphql
#import ../../app/Http/GraphQL/Types/Bed.graphql
#import ../../app/Http/GraphQL/Types/BedType.graphql
#import ../../app/Http/GraphQL/Types/Grid.graphql
#import ../../app/Http/GraphQL/Types/IdentificationStatus.graphql
#import ../../app/Http/GraphQL/Types/Plant.graphql
#import ../../app/Http/GraphQL/Types/PlantFilter.graphql
#import ../../app/Http/GraphQL/Types/ProvenanceType.graphql
#import ../../app/Http/GraphQL/Types/Rank.graphql
#import ../../app/Http/GraphQL/Types/Taxon.graphql
#import ../../app/Http/GraphQL/Types/Scalars.graphql

type Query {
    accessions: [Accession!]! @paginate(type: "paginator")
    accession(id: ID @eq): Accession @find

    beds(bedName: String @contains): [Bed!]! @paginate(type: "paginator")
    bed(id: ID @eq): Bed @find

    grids: [Grid!]! @paginate(type: "paginator")
    grid(id: ID @eq): Grid @find

    """
    Search for plants in Royal Botanic Gardens Victoria
    """
    plants(
        filter: PlantFilter
        sort: String
    ): [Plant!]! 
    @paginate(builder: "App\\Models\\Plant@search")

    plant(id: ID @eq): Plant @find

    taxa(taxonName: String @contains): [Taxon!]! @paginate(type: "paginator")
    taxon(id: ID @eq): Taxon @find
}